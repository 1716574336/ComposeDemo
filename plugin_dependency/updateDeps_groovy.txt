String inputFilePath = "D:\\other\\demo\\ComposeDome\\plugin_dependency\\versions.gradle"
String outputFilePath = "D:\\other\\demo\\ComposeDome\\plugin_dependency\\src/main/java/Deps.kt"

File inputFile = new File(inputFilePath)
if (!inputFile.exists()) {
    println("Input file not exists!")
    return
}

println("---- start ----")

String inputTxt = inputFile.text
StringBuilder builder = new StringBuilder()

/*
 * 解析拼接依赖object
 */
builder.append("/**\n")
        .append(" * @author:  Tom Hawk\n")
        .append(" * 添加时间: 2020/7/31 17:07\n")
        .append(" * 功能描述: 依赖管理\n")
        .append(" */\n")
        .append("object Deps {\n")


startFlag = "/*<dep>*/"
endFlag = "/*</dep>*/"

start = inputTxt.indexOf(startFlag)
end = inputTxt.indexOf(endFlag)

String depsTxt = inputTxt.substring(start + startFlag.length(), end).trim()

int implementationIndex
int doubleSlashIndex

while (true) {
    implementationIndex = depsTxt.indexOf("implementation")
    if (implementationIndex == -1) {
        break
    }
    doubleSlashIndex = depsTxt.lastIndexOf("//", implementationIndex)
    String namePart
    String name
    while (true) {
        namePart = depsTxt.substring(doubleSlashIndex + 2, implementationIndex)
        name = namePart.split(":")[0].trim()
        if (!name.contains("/")) {
            break
        }
        doubleSlashIndex = depsTxt.lastIndexOf("//", doubleSlashIndex - 2)
    }
    depsTxt = depsTxt.replaceFirst("implementation", String.format("val %s =", name))
}

builder.append("    ")
        .append(depsTxt)
        .append("\n}\n")

String resultTxt = builder.toString()

new File(outputFilePath).withPrintWriter("utf-8", { writer ->
    writer.print(resultTxt)
    writer.flush()
})

println("---- OK ----")
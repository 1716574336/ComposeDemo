plugins {
	id 'com.android.application'
	id 'kotlin-android'
//	id 'plugin.dep.box'
}

android {
//	compileSdkVersion Versions.compileSdk
	compileSdkVersion 30

	defaultConfig {
		applicationId "com.cenming.composedemo"
//		minSdkVersion Versions.minSdk
//		targetSdkVersion Versions.targetSdk
		minSdkVersion 22
		targetSdkVersion 30
		versionCode 1
		versionName "1.0"

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}
	}
	/**
	 * 使用 java8
	 */
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	/**
	 * 用 Java 1.8 编译 kotlin
	 */
	kotlinOptions {
		jvmTarget = '1.8'
		allWarningsAsErrors = true
	}

	/**
	 * compose
	 */
	buildFeatures { compose = true }
	composeOptions { kotlinCompilerExtensionVersion = compose_version }

	packagingOptions {
		excludes += "/META-INF/AL2.0"
		excludes += "/META-INF/LGPL2.1"
	}
}

dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	// design
	implementation 'com.google.android.material:material:1.3.0'
	// 单元测试 junit
	testImplementation 'junit:junit:4.13.2'
	// 单元测试 runner
	androidTestImplementation 'androidx.test:runner:1.3.0'
	// 单元测试 runner
	androidTestImplementation 'androidx.test:rules:1.3.0'
	// 单元测试 espresso
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
	// 单元测试 junitExt
	androidTestImplementation 'androidx.test.ext:junit:1.1.2'

	// kotlin
	implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
	// kotlinXCoroutinesAndroid
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2"

	// composeRuntime
	implementation "androidx.compose.runtime:runtime:$compose_version"
	// composeRuntimeLiveData
	implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
	// composeUI
	implementation "androidx.compose.ui:ui:$compose_version"
	// composeUITooling
	implementation "androidx.compose.ui:ui-tooling:$compose_version"
	// composeFoundation
	implementation "androidx.compose.foundation:foundation:$compose_version"
	// composeFoundationLayout
	implementation "androidx.compose.foundation:foundation-layout:$compose_version"
	// composeMaterial
	implementation "androidx.compose.material:material:$compose_version"
	// composeMaterialIcons
	implementation "androidx.compose.material:material-icons-extended:$compose_version"
	// composeAnimation
	implementation "androidx.compose.animation:animation:$compose_version"

	// appCompat
	implementation "androidx.appcompat:appcompat:1.3.0-beta01"
	// androidxActivityKtx
	implementation "androidx.activity:activity-ktx:1.2.0"
	// coreKtx
	implementation "androidx.core:core-ktx:1.5.0-beta01"
	// activityCompose
	implementation "androidx.activity:activity-compose:1.3.0-alpha03"

	// lifecycleViewModelSavedState
	implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.3.0"
	// liveDataKtx
	implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.0"
	// viewModelCompose
	implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha02"
	// accompanist
	implementation "dev.chrisbanes.accompanist:accompanist-insets:0.6.0"
	// paging
	implementation "androidx.paging:paging-runtime:3.0.0-beta02"
	implementation "androidx.paging:paging-compose:1.0.0-alpha08"
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
	kotlinOptions {
		// Treat all Kotlin warnings as errors
		allWarningsAsErrors = true
		freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
		// Enable experimental coroutines APIs, including Flow
		freeCompilerArgs += '-Xopt-in=kotlin.Experimental'

		// Set JVM target to 1.8
		jvmTarget = "1.8"
	}
}